@page "/practicas-uso"
@using ApexCharts
@using fl_front.Dtos
@using fl_front.Services
@inject IForecastService ForecastService

<h3 class="mt-3">📚 Uso de prácticas por mes</h3>

@if (IsLoading)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Mes</th>
                    <th>Práctica</th>
                    <th>Solicitudes</th>
                    <th>Estudiantes Totales</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in data.OrderBy(d => d.Mes).ThenByDescending(d => d.TotalEstudiantes))
                {
                    <tr>
                        <td>@item.Mes</td>
                        <td>@item.PracticaTitulo</td>
                        <td>@item.TotalSolicitudes</td>
                        <td>@item.TotalEstudiantes</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h4 class="mt-4">📊 Gráfico de barras (Estudiantes por práctica)</h4>

    <div style="height: 450px;">
        <ApexChart TItem="PracticaPoint" Title="Estudiantes por práctica" @ref="chart">
            <ApexChartOptions XAxisOptions="new ApexXAxis { Categories = Meses }" />
            @foreach (var practica in Practicas)
            {
                <ApexBarSeries TItem="PracticaPoint"
                               Name="@practica"
                               Items="@SeriesPorPractica[practica]"
                               YValue="p => p.Estudiantes" />
            }
        </ApexChart>
    </div>
}

@code {
    private List<ForecastPracticaDto> data = new();
    private ApexChart<PracticaPoint>? chart;
    private List<string> Meses = new();
    private List<string> Practicas = new();
    private Dictionary<string, List<PracticaPoint>> SeriesPorPractica = new();
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var response = await ForecastService.GetForecastPracticasUsoAsync();
        data = response.ToList();

        Meses = data.Select(x => x.Mes).Distinct().OrderBy(x => x).ToList();
        Practicas = data.Select(x => x.PracticaTitulo).Distinct().ToList();

        foreach (var practica in Practicas)
        {
            var puntos = Meses.Select(mes => new PracticaPoint
            {
                Mes = mes,
                Estudiantes = data
                    .FirstOrDefault(x => x.PracticaTitulo == practica && x.Mes == mes)?.TotalEstudiantes ?? 0
            }).ToList();

            SeriesPorPractica[practica] = puntos;
        }

        IsLoading = false;
    }

    public class PracticaPoint
    {
        public string Mes { get; set; } = "";
        public double Estudiantes { get; set; }
    }
}
