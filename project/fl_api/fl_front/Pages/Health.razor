@page "/health"
@using fl_front.Services
@using fl_front.Models
@inject IHealthService HealthService
@inject AppState AppState
<div class="bg-dark text-white ">
<h3 class="mb-4 text-center">🩺 Estado del Sistema</h3>

@if (isLoading)
{
    <div class="d-flex justify-content-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    </div>
}
else if (response is not null)
{
    <div class="card shadow-sm bg-dark text-white">
        <div class="card-body">
            <h5 class="card-title">
                Estado General:
                <span class="badge @(response.OverallStatus == "Healthy" ? "bg-success" : "bg-danger")">
                    @response.OverallStatus
                </span>
            </h5>

            <table class="table table-striped table-hover mt-4 bg-dark text-white table-dark">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">Componente</th>
                        <th scope="col">Estado</th>
                        <th scope="col">Detalle</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in response.Checks)
                    {
                        <tr>
                            <td>@item.Key</td>
                            <td>
                                @if (item.Value.Status is not null)
                                {
                                    <span class="badge @(item.Value.Status == "Healthy" ? "bg-success" : "bg-danger")">
                                        @item.Value.Status
                                    </span>
                                }
                                else
                                {
                                    <span class="text-muted">—</span>
                                }
                            </td>
                            <td>
                                @if (item.Value.Detail is not null)
                                {
                                    @item.Value.Detail
                                }
                                else
                                {
                                    <ul class="mb-0 list-unstyled">
                                        @if (item.Value.InputFolderExists is not null)
                                        {
                                            <li>📂 InputFolder: @(item.Value.InputFolderExists == true ? "Sí" : "No")</li>
                                        }
                                        @if (item.Value.OutputFolderExists is not null)
                                        {
                                            <li>📂 OutputFolder: @(item.Value.OutputFolderExists == true ? "Sí" : "No")</li>
                                        }
                                        @if (item.Value.PermanentFolderExists is not null)
                                        {
                                            <li>📁 PermanentFolder: @(item.Value.PermanentFolderExists == true ? "Sí" : "No")</li>
                                        }
                                        @if (item.Value.ScriptExtractJsonExists is not null)
                                        {
                                            <li>📝 Script JSON: @(item.Value.ScriptExtractJsonExists == true ? "Sí" : "No")</li>
                                        }
                                        @if (item.Value.PythonExeExists is not null)
                                        {
                                            <li>🐍 Python EXE: @(item.Value.PythonExeExists == true ? "Sí" : "No")</li>
                                        }
                                    </ul>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger mt-4" role="alert">
        No se pudo obtener el estado del sistema.
    </div>
}
</div>
@code {
    private HealthCheckResponse? response;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        if (AppState.LastHealthStatus is not null)
        {
            response = AppState.LastHealthStatus;
            isLoading = false;
            return;
        }

        try
        {
            response = await HealthService.GetHealthStatusAsync();
            AppState.LastHealthStatus = response;
        }
        finally
        {
            isLoading = false;
        }
    }
}
